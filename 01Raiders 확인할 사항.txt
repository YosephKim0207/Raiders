CellBounds에 대한 오차 문제 이유 찾기 (강의 다시 보기)
예제에서 적 오브젝트 충돌 판단 어떻게 하는지 보기
예제에서 적 오브젝트 충돌 판단 및 피격 어떻게 판단하는지 보기
> 맵은 충돌 데이터 가져와서 저장해두고 쓴다고 쳐도 적 오브젝트느?
> 추후 충돌 판별을 서버에서 가져오기(해킹 방지)

적 AI 행동 :
랜덤 범위를 통해 이동 / 제자리 사격 / 구르기 정하기. 비율은 숫자 범위로
범위는 테스트 해보며 조율하기

아이템 드랍도 랜덤 범위를 통해 확률 설정하기

이동 / 사격시 Jump가 씹히는 경우가 간혹 발생
01 : Jump모션이 일부만 실행되고 멈춤(마치 점프 하려다 마는 것처럼)
02 : 점프 시도를 안 함
+ 스페이스를 오래 누르고 있으면 하긴 함. State 변화와 JUmp 사이의
연관관계 확인할 필요 있음


- 대충 해결된 문제들
>>>Pool Idea :
01. 이 오브젝트 생성해!
02. 이 오브젝트 Pool 대상인지 확인해!
> 01 & 02를 이 오브젝트 pool해! 의 명령으로 치환한다면?
> 어떤 장단점이 있을까

03-01. 이 오브젝트 Pool 대상이면 
Pool 있는지 확인해!
03-01-01. 이 오브젝트 Pool 없으면 
ParentObj 만들어
03-01-02. child로 Obj 만들어서 비활성화 시켜! / 
비활성화 되어있는 childObj들 Pool의 Stack에 Push 시켜!
03-01-02. 이 오브젝트 Pool 있으면
다음 진행

// 01/02 알고리즘이 있는 경우
(03-02. 이 오브젝트 Pool 대상 아니면 
그냥 오브젝트 생성해!_

pool의 오브젝트가 부족할 때 추가하는 push
pool에 오브젝트를 반환하는 push 구분 필요

04. 이 오브젝트 Pool의 Stack에서 Pop 시켜! / Pop된 오브젝트 활성화 시켜!


- Custom Instantiate와 Destroy 의 필요성
> 이 오브젝트가 Pool용인지 아닌지 일일히 파악하여 써야하나?
> Pool 오브젝트 비활성화를 위해 일일히 확인해야 하나?